<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UserName" xml:space="preserve">
    <value>UserName</value>
  </data>
  <data name="FullLocation" xml:space="preserve">
    <value>FullLocation</value>
  </data>
  <data name="newPassword" xml:space="preserve">
    <value>new Password</value>
  </data>
  <data name="confirmNewPassword" xml:space="preserve">
    <value>confirm New Password</value>
  </data>
  <data name="UserNameRequiredMessage" xml:space="preserve">
    <value>UserName is Required</value>
  </data>
  <data name="EmailRequiredMessage" xml:space="preserve">
    <value>Email isRequired</value>
  </data>
  <data name="oldPasswordRequiredMessage" xml:space="preserve">
    <value>oldPassword is Required</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>PhoneNumber</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="confirmPasswordRequiredMessage" xml:space="preserve">
    <value>confirm Password is Required</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>RemmeberMe?</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>FullName</value>
  </data>
  <data name="UserType" xml:space="preserve">
    <value>UserType</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="oldPassword" xml:space="preserve">
    <value>oldPassword</value>
  </data>
  <data name="confirmPassword" xml:space="preserve">
    <value>confirm Password</value>
  </data>
  <data name="PasswordRequiredMessage" xml:space="preserve">
    <value>Password is Required</value>
  </data>
  <data name="newPasswordRequiredMessage" xml:space="preserve">
    <value>newPassword is Required</value>
  </data>
  <data name="PasswordNotMathErrorMessage" xml:space="preserve">
    <value>Password Not Math</value>
  </data>
  <data name="PhoneNumberRequiredMessage" xml:space="preserve">
    <value>PhoneNumber is Required</value>
  </data>
  <data name="FullLocationRequiredMessage" xml:space="preserve">
    <value>FullLocation is Required</value>
  </data>
  <data name="ActivateAccountSuccessMessage" xml:space="preserve">
    <value>Activated Account Successfully</value>
  </data>
  <data name="CreateNewAccount" xml:space="preserve">
    <value>CreateNewAccount</value>
  </data>
  <data name="EditSuccessfully" xml:space="preserve">
    <value>Edit Data Successfully</value>
  </data>
  <data name="NewPasswordIsNotCorrict" xml:space="preserve">
    <value>NewPassword IsNot Corricted</value>
  </data>
  <data name="UnActivateAccountSuccessMessage" xml:space="preserve">
    <value>DeActivated Account Successfully</value>
  </data>
  <data name="UserWellcom" xml:space="preserve">
    <value>Wellcom</value>
  </data>
  <data name="CreateNewRole" xml:space="preserve">
    <value>Create New Role</value>
  </data>
  <data name="RoleInfo" xml:space="preserve">
    <value>Role Information</value>
  </data>
  <data name="RoleManage" xml:space="preserve">
    <value>Manage User Roles</value>
  </data>
  <data name="RoleName" xml:space="preserve">
    <value> Role Name</value>
  </data>
  <data name="ActiveUserAccount" xml:space="preserve">
    <value>Activate</value>
  </data>
  <data name="ActiveUserAccountConfrimMessage" xml:space="preserve">
    <value>Are you sure to activate this accont</value>
  </data>
  <data name="AddAdmin" xml:space="preserve">
    <value>AddAdmin</value>
  </data>
  <data name="DeActiveUserAccount" xml:space="preserve">
    <value>DeActivate</value>
  </data>
  <data name="DeActiveUserAccountConfrimMessage" xml:space="preserve">
    <value>are you sure  deActivate this account</value>
  </data>
  <data name="DeleteCommentConfrimMessage" xml:space="preserve">
    <value>are you sure to delete this comment or sugguest</value>
  </data>
  <data name="DeleteCommentSuccessMessage" xml:space="preserve">
    <value>Delete comment or suggest successfully</value>
  </data>
  <data name="UserList" xml:space="preserve">
    <value>User List</value>
  </data>
  <data name="UserManage" xml:space="preserve">
    <value>Manage User</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="getAdminAndUsers" xml:space="preserve">
    <value>Admin And Users</value>
  </data>
  <data name="getAdmins" xml:space="preserve">
    <value>getAdmins</value>
  </data>
  <data name="getUsers" xml:space="preserve">
    <value>get Users</value>
  </data>
</root>